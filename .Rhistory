if (is.null(streamflow2) & (ncol(input) > 3))
streamflow2 <- input[, 4]
if (is.null(precip) & (ncol(input) > 2)) {
precip <- input[, 2]
streamflow <- input[, 3]
}
if (!is.null(precip))  {
par(mar = c(3, 5, 1, 4))
barplot(
precip[begin:endindex],
yaxt = "n",
space = NULL,
ylim = rev(c(0, 4 * max(na.omit(
precip[begin:endindex]
)))),
xaxt = "n"
)
axis(
side = 3,
pos = 0,
tck = 0,
xaxt = "n"
)
r <-
max(ceiling(-log10(max(na.omit(
precip[begin:endindex]
)))), 0)
axis(
side = 4,
at = seq(0, round(max(na.omit(
precip[begin:endindex]
)) +
10 ^ (-r), r), length = (1 + ifelse(
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r) < 10 * 10 ^ (-r), floor(max(na.omit(precip[begin:endindex])) *
10 ^ r +
1), 4
))),
labels = seq(
0,
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r),
length = (1 + ifelse(round(max(
na.omit(precip[begin:endindex])
) +
10^(-r), r) < 10*10^(-r), floor(max(na.omit(precip[begin:endindex]))*10^r + 1),
4))))
if (P.units=="") {
mtext(paste("Precipitation", P.units), 4, line = 2, cex = 0.9, adj = 1)
} else  mtext(paste("Precipitation (", P.units, ")", sep=""), 4, line = 2, cex = 0.9, adj = 1)
par(new = T)
}
if (!is.null(precip2)){
barplot(precip2[begin:endindex], yaxt = "n", space = NULL, col="pink",
ylim = rev(c(0, 4 * max(na.omit(precip[begin:endindex])))),
xaxt = "n")
par(new = T)
}
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(11)
labs <- c("Bunny", "Cardinal", "Gravy", "Hen", "Lettuce", "Mouth", "Plume", "Turkey", "Walnut","Yam")
# PLOT STREAMFLOW
plot(streamflow[begin:endindex], col = mycolors[1], type = "l",
lwd = 2, ylab = stream.label, xaxt = "n", xlab = "date",
ylim = c(0, 1.2 * max(na.omit(streamflow[begin:endindex]), na.omit(streamflow2[begin:endindex]))),
axes = FALSE)
#mtext (expression(paste("                              ", " (" , m^3/s, ")", sep="")), 2,3)
if (S.units=="m3/s" | S.units=="m3s"){
mtext (expression(paste(" (" , m^3/s, ")", sep="")), 2,1.5)
} else if (S.units=="ft3/s" | S.units=="ft3s") {
mtext (expression(paste(" (" , ft^3/s, ")", sep="")), 2,1.5)
} else if (S.units!="") mtext (paste(" (" , S.units, ")", sep=""), 2,1.5)
lines(streamflow2[begin:endindex], col = mycolors[2], lwd = 2,
lty = 1, xaxt = "n")
if (!is.null(streamflow3)){
lines(streamflow3[begin:endindex], col = mycolors[3], lwd = 2,   ##potential for more streamflows
lty = 1, xaxt = "n")
}
if (!is.null(streamflow4)){
lines(streamflow4[begin:endindex], col = mycolors[4], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
# BRADY ADDED EXTRA FLOWS
if (!is.null(streamflow5)){
lines(streamflow5[begin:endindex], col = mycolors[5], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow6)){
lines(streamflow6[begin:endindex], col = mycolors[6], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow7)){
lines(streamflow7[begin:endindex], col = mycolors[7], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow8)){
lines(streamflow8[begin:endindex], col = mycolors[8], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow9)){
lines(streamflow9[begin:endindex], col = mycolors[9], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow10)){
lines(streamflow10[begin:endindex], col = mycolors[10], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
axis(side = 1, at = seq(1, (endindex - begin + 1), length = 14),
pos = 0, labels = format(timeSeries[seq(begin, endindex,
length = 14)], "%d-%b-%y"))
legend("bottomright", inset = c(0.05, 0.475),legend=c(labs), col=c(mycolors), lty=1, cex=0.6)
axis(side = 2, pos = 0)
}
hydrograph2(
input = depths,
streamflow = depths$Bunny,
precip = depths$Precipitation.cm,
streamflow2 = depths$Cardinal,
streamflow3 = depths$Gravy,
streamflow4 = depths$Hen,
streamflow5 = depths$Lettuce,
streamflow6 = depths$Mouth,
streamflow7 = depths$Plume,
streamflow8 = depths$Turkey,
streamflow9 = depths$Walnut,
streamflow10 = depths$Yam,
P.units = "cm"
)
hydrograph2 <-
function (input = matrix(ncol = 2, nrow = 2),
streamflow = input[,
2],
timeSeries = input[, 1],
streamflow2 = NULL,
precip = NULL,
begin = 1,
endindex = length(streamflow),
P.units = "",
S.units = "",
S1.col = "black",
S2.col = "red",
stream.label = "Water Depth (m)",
streamflow3 = NULL,
streamflow4 = NULL,
streamflow5 = NULL,
streamflow6 = NULL,
streamflow7 = NULL,
streamflow8 = NULL,
streamflow9 = NULL,
streamflow10 = NULL,
precip2 = NULL) {
# PRECIP
if (is.null(streamflow2) & (ncol(input) > 3))
streamflow2 <- input[, 4]
if (is.null(precip) & (ncol(input) > 2)) {
precip <- input[, 2]
streamflow <- input[, 3]
}
if (!is.null(precip))  {
par(mar = c(3, 5, 1, 4))
barplot(
precip[begin:endindex],
yaxt = "n",
space = NULL,
ylim = rev(c(0, 4 * max(na.omit(
precip[begin:endindex]
)))),
xaxt = "n"
)
axis(
side = 3,
pos = 0,
tck = 0,
xaxt = "n"
)
r <-
max(ceiling(-log10(max(na.omit(
precip[begin:endindex]
)))), 0)
axis(
side = 4,
at = seq(0, round(max(na.omit(
precip[begin:endindex]
)) +
10 ^ (-r), r), length = (1 + ifelse(
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r) < 10 * 10 ^ (-r), floor(max(na.omit(precip[begin:endindex])) *
10 ^ r +
1), 4
))),
labels = seq(
0,
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r),
length = (1 + ifelse(round(max(
na.omit(precip[begin:endindex])
) +
10^(-r), r) < 10*10^(-r), floor(max(na.omit(precip[begin:endindex]))*10^r + 1),
4))))
if (P.units=="") {
mtext(paste("Precipitation", P.units), 4, line = 2, cex = 0.9, adj = 1)
} else  mtext(paste("Precipitation (", P.units, ")", sep=""), 4, line = 2, cex = 0.9, adj = 1)
par(new = T)
}
if (!is.null(precip2)){
barplot(precip2[begin:endindex], yaxt = "n", space = NULL, col="pink",
ylim = rev(c(0, 4 * max(na.omit(precip[begin:endindex])))),
xaxt = "n")
par(new = T)
}
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(11)
labs <- c("Bunny", "Cardinal", "Gravy", "Hen", "Lettuce", "Mouth", "Plume", "Turkey", "Walnut","Yam")
# PLOT STREAMFLOW
plot(streamflow[begin:endindex], col = mycolors[1], type = "l",
lwd = 2, ylab = stream.label, xaxt = "n", xlab = "date",
ylim = c(0, 1.2 * max(na.omit(streamflow[begin:endindex]), na.omit(streamflow2[begin:endindex]))),
axes = FALSE)
#mtext (expression(paste("                              ", " (" , m^3/s, ")", sep="")), 2,3)
if (S.units=="m3/s" | S.units=="m3s"){
mtext (expression(paste(" (" , m^3/s, ")", sep="")), 2,1.5)
} else if (S.units=="ft3/s" | S.units=="ft3s") {
mtext (expression(paste(" (" , ft^3/s, ")", sep="")), 2,1.5)
} else if (S.units!="") mtext (paste(" (" , S.units, ")", sep=""), 2,1.5)
lines(streamflow2[begin:endindex], col = mycolors[2], lwd = 2,
lty = 1, xaxt = "n")
if (!is.null(streamflow3)){
lines(streamflow3[begin:endindex], col = mycolors[3], lwd = 2,   ##potential for more streamflows
lty = 1, xaxt = "n")
}
if (!is.null(streamflow4)){
lines(streamflow4[begin:endindex], col = mycolors[4], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
# BRADY ADDED EXTRA FLOWS
if (!is.null(streamflow5)){
lines(streamflow5[begin:endindex], col = mycolors[5], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow6)){
lines(streamflow6[begin:endindex], col = mycolors[6], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow7)){
lines(streamflow7[begin:endindex], col = mycolors[7], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow8)){
lines(streamflow8[begin:endindex], col = mycolors[8], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow9)){
lines(streamflow9[begin:endindex], col = mycolors[9], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow10)){
lines(streamflow10[begin:endindex], col = mycolors[10], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
axis(side = 1, at = seq(1, (endindex - begin + 1), length = 14),
pos = 0, labels = format(timeSeries[seq(begin, endindex,
length = 14)], "%d-%b-%y"))
legend("bottomright", inset = c(0.05, 0.475),legend=c(labs), col=c(mycolors), lty=1, cex=0.5)
axis(side = 2, pos = 0)
}
hydrograph2(
input = depths,
streamflow = depths$Bunny,
precip = depths$Precipitation.cm,
streamflow2 = depths$Cardinal,
streamflow3 = depths$Gravy,
streamflow4 = depths$Hen,
streamflow5 = depths$Lettuce,
streamflow6 = depths$Mouth,
streamflow7 = depths$Plume,
streamflow8 = depths$Turkey,
streamflow9 = depths$Walnut,
streamflow10 = depths$Yam,
P.units = "cm"
)
png("03_Hydrographs.png", width=190, height = 100, units="mm", res=300)
Fig3b
hydrograph2 <-
function (input = matrix(ncol = 2, nrow = 2),
streamflow = input[,
2],
timeSeries = input[, 1],
streamflow2 = NULL,
precip = NULL,
begin = 1,
endindex = length(streamflow),
P.units = "",
S.units = "",
S1.col = "black",
S2.col = "red",
stream.label = "Water Depth (m)",
streamflow3 = NULL,
streamflow4 = NULL,
streamflow5 = NULL,
streamflow6 = NULL,
streamflow7 = NULL,
streamflow8 = NULL,
streamflow9 = NULL,
streamflow10 = NULL,
precip2 = NULL) {
# PRECIP
if (is.null(streamflow2) & (ncol(input) > 3))
streamflow2 <- input[, 4]
if (is.null(precip) & (ncol(input) > 2)) {
precip <- input[, 2]
streamflow <- input[, 3]
}
if (!is.null(precip))  {
par(mar = c(3, 5, 1, 4))
barplot(
precip[begin:endindex],
yaxt = "n",
space = NULL,
ylim = rev(c(0, 4 * max(na.omit(
precip[begin:endindex]
)))),
xaxt = "n"
)
axis(
side = 3,
pos = 0,
tck = 0,
xaxt = "n"
)
r <-
max(ceiling(-log10(max(na.omit(
precip[begin:endindex]
)))), 0)
axis(
side = 4,
at = seq(0, round(max(na.omit(
precip[begin:endindex]
)) +
10 ^ (-r), r), length = (1 + ifelse(
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r) < 10 * 10 ^ (-r), floor(max(na.omit(precip[begin:endindex])) *
10 ^ r +
1), 4
))),
labels = seq(
0,
round(max(na.omit(precip[begin:endindex])) +
10 ^
(-r), r),
length = (1 + ifelse(round(max(
na.omit(precip[begin:endindex])
) +
10^(-r), r) < 10*10^(-r), floor(max(na.omit(precip[begin:endindex]))*10^r + 1),
4))))
if (P.units=="") {
mtext(paste("Precipitation", P.units), 4, line = 2, cex = 0.9, adj = 1)
} else  mtext(paste("Precipitation (", P.units, ")", sep=""), 4, line = 2, cex = 0.9, adj = 1)
par(new = T)
}
if (!is.null(precip2)){
barplot(precip2[begin:endindex], yaxt = "n", space = NULL, col="pink",
ylim = rev(c(0, 4 * max(na.omit(precip[begin:endindex])))),
xaxt = "n")
par(new = T)
}
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(11)
labs <- c("Bunny", "Cardinal", "Gravy", "Hen", "Lettuce", "Mouth", "Plume", "Turkey", "Walnut","Yam")
# PLOT STREAMFLOW
plot(streamflow[begin:endindex], col = mycolors[1], type = "l",
lwd = 2, ylab = stream.label, xaxt = "n", xlab = "date",
ylim = c(0, 1.2 * max(na.omit(streamflow[begin:endindex]), na.omit(streamflow2[begin:endindex]))),
axes = FALSE)
#mtext (expression(paste("                              ", " (" , m^3/s, ")", sep="")), 2,3)
if (S.units=="m3/s" | S.units=="m3s"){
mtext (expression(paste(" (" , m^3/s, ")", sep="")), 2,1.5)
} else if (S.units=="ft3/s" | S.units=="ft3s") {
mtext (expression(paste(" (" , ft^3/s, ")", sep="")), 2,1.5)
} else if (S.units!="") mtext (paste(" (" , S.units, ")", sep=""), 2,1.5)
lines(streamflow2[begin:endindex], col = mycolors[2], lwd = 2,
lty = 1, xaxt = "n")
if (!is.null(streamflow3)){
lines(streamflow3[begin:endindex], col = mycolors[3], lwd = 2,   ##potential for more streamflows
lty = 1, xaxt = "n")
}
if (!is.null(streamflow4)){
lines(streamflow4[begin:endindex], col = mycolors[4], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
# BRADY ADDED EXTRA FLOWS
if (!is.null(streamflow5)){
lines(streamflow5[begin:endindex], col = mycolors[5], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow6)){
lines(streamflow6[begin:endindex], col = mycolors[6], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow7)){
lines(streamflow7[begin:endindex], col = mycolors[7], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow8)){
lines(streamflow8[begin:endindex], col = mycolors[8], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow9)){
lines(streamflow9[begin:endindex], col = mycolors[9], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
if (!is.null(streamflow10)){
lines(streamflow10[begin:endindex], col = mycolors[10], lwd = 2,   ##potential for more streamflows
lty=1, xaxt = "n")
}
axis(side = 1, at = seq(1, (endindex - begin + 1), length = 14),
pos = 0, labels = format(timeSeries[seq(begin, endindex,
length = 14)], "%d-%b-%y"))
legend("bottomright", inset = c(0.05, 0.475),legend=c(labs), col=c(mycolors), lty=1, cex=0.5)
axis(side = 2, pos = 0)
}
Fig3b <- hydrograph2(
input = depths,
streamflow = depths$Bunny,
precip = depths$Precipitation.cm,
streamflow2 = depths$Cardinal,
streamflow3 = depths$Gravy,
streamflow4 = depths$Hen,
streamflow5 = depths$Lettuce,
streamflow6 = depths$Mouth,
streamflow7 = depths$Plume,
streamflow8 = depths$Turkey,
streamflow9 = depths$Walnut,
streamflow10 = depths$Yam,
P.units = "cm"
)
Fig3b
png("03_Hydrographs.png", width=190, height = 100, units="mm", res=300)
Fig3b
dev.off()
png("03_Hydrographs.png", width=190, height = 100, units="mm", res=300)
hydrograph2(
input = depths,
streamflow = depths$Bunny,
precip = depths$Precipitation.cm,
streamflow2 = depths$Cardinal,
streamflow3 = depths$Gravy,
streamflow4 = depths$Hen,
streamflow5 = depths$Lettuce,
streamflow6 = depths$Mouth,
streamflow7 = depths$Plume,
streamflow8 = depths$Turkey,
streamflow9 = depths$Walnut,
streamflow10 = depths$Yam,
P.units = "cm"
)
dev.off()
?facet_wrap
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(RColorBrewer)
nutrients <- read.csv(file = "./data/NutrientBoxplotsData.csv", header=T, sep=",")
# values <- nutrients$Value
nutrients <- nutrients[ , c(1:3)] %>%
filter(Value != "") %>%
filter(Value < 1500)
# nutrients$Value <- as.numeric(levels(nutrients$Value))[nutrients$Value]
nutrients$Season <- factor(nutrients$Season, levels=c("R-E", "R-L", "S-E", "S-L", "C-E", "C-L"))
# ggplot(nutrients[nutrients$Nutrient == "Ammonia", ], aes(Season, Value))+
# geom_boxplot()
Fig5 <- ggplot(nutrients)+
geom_boxplot(aes(x=Season, y=Value))+
facet_wrap(~Nutrient, nrow=3, ncol=2, scales = "fixed")+
theme_bw(base_size = 9)+
labs(
x="Field Status and Season",
y="Concentration (mg/L)"
)
Fig5
png(filename = "05_NutrientBoxplots.png", width=135, height=135, units="mm", res=300)
Fig5
dev.off()
# ggplot(nutrients[nutrients$Nutrient == "Ammonia", ], aes(Season, Value))+
# geom_boxplot()
Fig5 <- ggplot(nutrients)+
geom_boxplot(aes(x=Season, y=Value))+
facet_wrap(~Nutrient, nrow=3, ncol=2, scales = "free")+
theme_bw(base_size = 9)+
labs(
x="Field Status and Season",
y="Concentration (mg/L)"
)
Fig5
# ggplot(nutrients[nutrients$Nutrient == "Ammonia", ], aes(Season, Value))+
# geom_boxplot()
Fig5 <- ggplot(nutrients)+
geom_boxplot(aes(x=Season, y=Value))+
facet_wrap(~Nutrient, nrow=3, ncol=2, scales = "free_y")+
expand_limits(y=0)+
theme_bw(base_size = 9)+
labs(
x="Field Status and Season",
y="Concentration (mg/L)"
)
Fig5
png(filename = "05_NutrientBoxplots.png", width=135, height=135, units="mm", res=300)
Fig5
dev.off()
